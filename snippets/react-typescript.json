{
  "rimr": {
    "prefix": "rimr",
    "body": ["import React from 'react';"],
    "description": "TypeScript: import react"
  },
  "rimrd": {
    "prefix": "rimrd",
    "body": ["import ReactDOM from 'react-dom';"],
    "description": "TypeScript: import React DOM"
  },
  "rimrs": {
    "prefix": "rimrs",
    "body": ["import React, { useState } from 'react';"],
    "description": "Typescript: Import React and useState"
  },
  "rimrse": {
    "prefix": "rimrse",
    "body": ["import React, { useState, useEffect} from 'react';"],
    "description": "Typescript: Import React, useState and useEffect"
  },
  "rfct": {
    "prefix": "rfct",
    "body": [
      "import type { FC } from 'react';",
      "",
      "interface ${TM_FILENAME_BASE}Props {}",
      "",
      "const $TM_FILENAME_BASE: FC<${TM_FILENAME_BASE}Props> = ({$2}) => {",
      "\t\treturn ($3);",
      "}",
      "export default $TM_FILENAME_BASE;"
    ],
    "description": "Typescript: React functional component"
  },
  "ruet": {
    "prefix": "ruet",
    "body": ["useEffect(() => {", "\t$1", "}, []);"],
    "description": "TypeScript: useEffect hook"
  },
  "rumt": {
    "prefix": "rumt",
    "body": ["useMemo<${1}>(() => {", "\t$2", "}, []);"],
    "description": "Typescript: useMemo hook"
  },
  "rust": {
    "prefix": "rust",
    "body": ["const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState(${2});"],
    "description": "TypeScript: useState hook"
  },
  "ruct": {
    "prefix": "ruct",
    "body": ["const ${1} = useContext(${2});"],
    "description": "TypeScript: useContext hook"
  },
  "rucbt": {
    "prefix": "rucbt",
    "body": [
      "const handleCallback = useCallback(() => {",
      "\t$1",
      "}, [${2}]);"
    ],
    "description": "TypeScript: useCallback hook"
  },
  "rurt": {
    "prefix": "rurt",
    "body": ["const ${1} = useRef(${2});"],
    "description": "TypeScript: useRef hook"
  }
}
